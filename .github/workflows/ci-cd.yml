name: ECS Deployment

on:
  push:
    branches:
      - ECR
  pull_request:
    branches:
      - ECR

jobs: 
  Terraform-Setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.6

      - name: Initialize Terraform
        run: terraform init

      - name: Apply Terraform
        run: terraform apply -auto-approve

      - name: Extract ECR Repository URI
        run: |
          echo "ECR_REPO_URI=$(terraform output -raw ecr_repository_url)" >> $GITHUB_ENV

  Build-Spring-boot:
    needs: Terraform-Setup
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build with Maven
        run: mvn clean package

      - name: Upload JAR as an Artifact
        uses: actions/upload-artifact@v4
        with:
          name: application-jar
          path: target/demo-0.0.1-SNAPSHOT.jar

  Deploy_image_ECR:
    needs: Build-Spring-boot
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Download JAR from Artifact
        uses: actions/download-artifact@v4
        with:
          name: application-jar
          path: target/

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION}}

      - name: Authenticate to AWS Public ECR
        run: aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws

      - name: Build Docker Image
        run: |
          docker build -t $ECR_REPO_URI:latest .

      - name: Push Docker Image to AWS Public ECR
        run: |
          docker push $ECR_REPO_URI:latest

  Deploy_to_ECS:
    needs: Deploy_image_ECR
    runs-on: ubuntu-latest

    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION}}

      - name: Update ECS Task Definition
        run: |
          aws ecs update-service --cluster my-ecs-cluster \
          --service spring-boot-service \
          --force-new-deployment
